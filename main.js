(()=>{"use strict";function e(e){return`${String(e.getDate()).padStart(2,"0")}.${String(e.getMonth()+1).padStart(2,"0")}.${String(e.getFullYear()).slice(-2)} ${String(e.getHours()).padStart(2,"0")}:${String(e.getMinutes()).padStart(2,"0")}`}function t(t,o){const c={type:"text",text:t,coords:o,date:e(new Date)};a(c),n(c)}function o(t,o){const c=e(new Date),r={type:"audio",audioUrl:t.src,coords:o,date:c};a(r),n(r)}function n(e){const t=document.createElement("div");t.className="post";const o=document.createElement("div");if(o.className="post__container","text"===e.type){const t=document.createElement("p");t.className="post__text",t.textContent=e.text,o.appendChild(t)}else if("audio"===e.type){const t=new Audio(e.audioUrl);t.controls=!0,t.className="audio__player custom__audio-player",o.appendChild(t)}const n=document.createElement("div");n.className="date",n.textContent=e.date,o.appendChild(n);const a=document.createElement("div");a.className="coords",a.textContent=`[${e.coords.latitude}, ${e.coords.longitude}]`,t.appendChild(o),t.appendChild(a),document.querySelector(".timeline").prepend(t)}function a(e){const t=JSON.parse(localStorage.getItem("posts"))||[];t.push(e),localStorage.setItem("posts",JSON.stringify(t))}function c(){return new Promise(((e,t)=>{navigator.geolocation?navigator.geolocation.getCurrentPosition((t=>{const o={latitude:t.coords.latitude,longitude:t.coords.longitude};e(o)}),(()=>{t()})):t()}))}function r(e,t,o){const n=document.createElement("div");n.className="modal",n.innerHTML=`\n      <div class="modal__content">\n        <div class="modal__text">Что-то пошло не так</div>\n        <p class="modal__text">${e}</p>\n        <div class="modal__text">Широта и долгота через запятую</div>\n        <input type="text" class="manual__coords" placeholder="51.50851, -0.12572">\n        <div class="modal__btns">\n          <button class="close__modal">Отмена</button>\n          <button class="submit__coords">Ок</button>\n        </div>\n      </div>\n  `,document.body.appendChild(n),document.querySelector(".submit__coords").addEventListener("click",(()=>{const e=document.querySelector(".manual__coords").value.trim();try{const a=function(e){const t=e.match(/^\[?([-+]?[0-9]*\.?[0-9]+),\s*([-+]?[0-9]*\.?[0-9]+)\]?$/);if(!t)throw new Error("Invalid format");return{latitude:parseFloat(t[1]),longitude:parseFloat(t[2])}}(e);t(o,a),document.body.removeChild(n)}catch(e){alert("Неверный формат координат.")}})),document.querySelector(".close__modal").addEventListener("click",(()=>{document.body.removeChild(n)}))}let d,s,l;function i(){clearInterval(d)}let u=[],m=!1;function p(){const e=document.querySelector(".buttons__media");navigator.mediaDevices.getUserMedia({audio:!0}).then((t=>{l=new MediaRecorder(t),l.start(),e.style.display="none",l.addEventListener("dataavailable",(e=>{u.push(e.data)})),l.addEventListener("stop",(()=>{if(m)return u=[],m=!1,void(e.style.display="flex");const t=new Blob(u,{type:"audio/ogg; codecs=opus"}),n=URL.createObjectURL(t),a=new Audio(n);a.controls=!0,a.className="audio__player custom__audio-player",e.style.display="flex",c().then((e=>{o(a,e)})).catch((()=>{r("К сожалению, нам не удалось определить ваше местоположение, пожалуйста, дайте разрешение на использование геолокации, либо введите координаты вручную.",o,a)}))})),document.querySelector(".recording__controls").style.display="flex",clearInterval(d),s=Date.now(),d=setInterval((()=>{const e=Date.now()-s,t=String(Math.floor(e/6e4)).padStart(2,"0"),o=String(Math.floor(e%6e4/1e3)).padStart(2,"0");document.querySelector(".timer").textContent=`${t}:${o}`}),1e3)})).catch((()=>{alert("Не удалось получить доступ к микрофону.")}))}function _(){l.stop(),i(),document.querySelector(".recording__controls").style.display="none"}function y(){m=!0,l.stop(),u=[],i(),document.querySelector(".recording__controls").style.display="none"}document.addEventListener("DOMContentLoaded",(()=>{(JSON.parse(localStorage.getItem("posts"))||[]).forEach((e=>n(e)));const e=document.querySelector(".post__input");e.addEventListener("keypress",(o=>{if("Enter"===o.key&&!o.shiftKey){o.preventDefault();const n=e.value.trim();n&&c().then((o=>{t(n,o),e.value=""})).catch((()=>{r("К сожалению, нам не удалось определить ваше местоположение, пожалуйста, дайте разрешение на использование геолокации, либо введите координаты вручную.",t,n)}))}})),document.querySelector(".start__recording").addEventListener("click",p),document.querySelector(".stop__recording").addEventListener("click",_),document.querySelector(".cancel__recording").addEventListener("click",y)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,